//Get globalData and a random index to check
var jsonData = pm.response.json();
var randomIndex = Math.floor(Math.random() * jsonData.length)

//Test to check id is positive
pm.test("Check id is positive", function () {
    pm.expect(jsonData[randomIndex].id).to.greaterThan(0);
});

//Test to check createDate is valid date
pm.test("Check createDate is valid date", function () {
    pm.expect(Date.parse(jsonData[randomIndex].createDate)).not.equal(NaN)
});

//Test to check removed is a boolean
pm.test("Check removed is a boolean", function () {
    pm.expect(typeof jsonData[randomIndex].boolean).to.equal('boolean')
});

//Test to check name is a string
pm.test("Check name is a string", function () {
    pm.expect(typeof jsonData[randomIndex].name).to.equal('string')
});

//Test to check useAsDefault is a boolean
pm.test("Check useAsDefault is a boolean", function () {
    pm.expect(typeof jsonData[randomIndex].boolean).to.equal('boolean')
});

//Test to check triggersScanningEntryForStockOnOffEvents is a boolean
pm.test("Check triggersScanningEntryForStockOnOffEvents is a boolean", function () {
    pm.expect(typeof jsonData[randomIndex].boolean).to.equal('boolean')
});

//Test to check businessUnitId is non-negative
pm.test("Check businessUnitId is non-negative", function () {
    pm.expect(jsonData[randomIndex].businessUnitId).to.greaterThan(-1);
});

//Test to check organisationId is non-negative
pm.test("Check organisationId is non-negative", function () {
    pm.expect(jsonData[randomIndex].organisationId).to.greaterThan(-1);
});

//Test to check code is a string
pm.test("Check code is a string", function () {
    pm.expect(typeof jsonData[randomIndex].code).to.equal('string')
});

